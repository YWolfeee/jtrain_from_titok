The following values were not passed to `accelerate launch` and had defaults used instead:
	`--mixed_precision` was set to a value of `'no'`
	`--dynamo_backend` was set to a value of `'no'`
To avoid this warning pass in values for each of the problematic parameters or run `accelerate config`.
/home/qiyuan/jtrain_from_titok/modeling/modules/losses.py:138: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
/home/qiyuan/jtrain_from_titok/modeling/quantizer/quantizer.py:43: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
/home/qiyuan/jtrain_from_titok/modeling/quantizer/quantizer.py:98: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
/home/qiyuan/jtrain_from_titok/modeling/quantizer/quantizer.py:118: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
/home/qiyuan/jtrain_from_titok/modeling/quantizer/quantizer.py:123: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
/home/qiyuan/jtrain_from_titok/modeling/quantizer/quantizer.py:127: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  @autocast(enabled=False)
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Tracking run with wandb version 0.19.0
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
/home/qiyuan/jtrain_from_titok/modeling/titok.py:52: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.load_state_dict(torch.load(pretrained_weight, map_location=torch.device("cpu")), strict=True)
/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/utils/data/dataloader.py:617: UserWarning: This DataLoader will create 12 worker processes in total. Our suggested max number of worker in current system is 6, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(
Traceback (most recent call last):
  File "/home/qiyuan/jtrain_from_titok/scripts/train_titok.py", line 177, in <module>
    main()
  File "/home/qiyuan/jtrain_from_titok/scripts/train_titok.py", line 146, in main
    global_step = train_one_epoch(config, logger, accelerator,
  File "/home/qiyuan/jtrain_from_titok/utils/train_utils.py", line 371, in train_one_epoch
    reconstructed_images, extra_results_dict = model(images)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/accelerate/utils/operations.py", line 823, in forward
    return model_forward(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/accelerate/utils/operations.py", line 811, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/amp/autocast_mode.py", line 44, in decorate_autocast
    return func(*args, **kwargs)
  File "/home/qiyuan/jtrain_from_titok/modeling/titok.py", line 254, in forward
    z_quantized, result_dict = self.encode(x)
  File "/home/qiyuan/jtrain_from_titok/modeling/titok.py", line 185, in encode
    z = self.encoder(pixel_values=x, latent_tokens=self.latent_tokens)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/qiyuan/jtrain_from_titok/modeling/modules/blocks.py", line 277, in forward
    x = self.transformer[i](x)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/qiyuan/jtrain_from_titok/modeling/modules/blocks.py", line 66, in forward
    x = x + self.mlp(self.ln_2(x))
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/torch/nn/modules/activation.py", line 734, in forward
    return F.gelu(input, approximate=self.approximate)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 770.00 MiB. GPU 0 has a total capacity of 44.45 GiB of which 561.88 MiB is free. Including non-PyTorch memory, this process has 43.89 GiB memory in use. Of the allocated memory 43.00 GiB is allocated by PyTorch, and 579.39 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "/home/qiyuan/.conda/envs/titok/bin/accelerate", line 8, in <module>
    sys.exit(main())
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    args.func(args)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/accelerate/commands/launch.py", line 1168, in launch_command
    simple_launcher(args)
  File "/home/qiyuan/.conda/envs/titok/lib/python3.10/site-packages/accelerate/commands/launch.py", line 763, in simple_launcher
    raise subprocess.CalledProcessError(returncode=process.returncode, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/qiyuan/.conda/envs/titok/bin/python', 'scripts/train_titok.py', 'config=configs/training/stage1/dry_run.yaml', 'experiment.project=dry_run_stage1', 'experiment.name=dry_run_stage1_run1', 'experiment.output_dir=dry_run_stage1_run1', 'model.use_reconstruction_regularization=True', 'model.reconstruction_regularization.name=matryoshka', 'model.reconstruction_regularization.mask_ratio_method=uniform', 'model.reconstruction_regularization.max_mask_rate=0.95', 'model.reconstruction_regularization.use_annealing=True', 'model.reconstruction_regularization.annealing.time_start=0.25', 'model.reconstruction_regularization.annealing.time_end=0.75', 'model.reconstruction_regularization.annealing.is_increasing=False', 'training.per_gpu_batch_size=128', 'optimizer.params.learning_rate=4e-4', 'training.max_train_steps=250_000']' returned non-zero exit status 1.
